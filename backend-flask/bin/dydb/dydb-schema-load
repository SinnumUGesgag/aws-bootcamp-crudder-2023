#!/usr/bin/env python

import boto3        # Reference :   https://boto3.amazonaws.com/v1/documentation/api/1.9.42/reference/services/dynamodb.html#DynamoDB.Client.create_table 
import sys


if len(sys.argv) == 2:          # pull the arguments being pull has a length of 2, meaning 2 arguments
    if "prod" in sys.argv[1]:   # if first argument is prod
        print(f"---- DyDb Schema Load: len(sys.argv) : PROD Output ----")
        attributes = {
            #endpoint_url= #the prod url
        }
else:
    attributes = {  # point boto3 client at the dynamoDB container we have running locally
        'endpoint_url': 'http://127.0.0.1:8000'
    }


dyDBclient = boto3.client('dynamodb', **attributes)

table_name = 'cruddur_messages'



response = dyDBclient.create_table(
    TableName = table_name,
    AttributeDefinitions=[
        {
            'AttributeName': 'message_group_uuid',
            'AttributeType': 'S'
        },
        {
            'AttributeName': 'pk',
            'AttributeType': 'S'
        },
        {
            'AttributeName': 'sk',
            'AttributeType': 'S'
        },
    ],
    KeySchema=[
        {
            'AttributeName': 'pk',
            'KeyType': 'HASH'
        },
        {
            'AttributeName': 'sk',
            'KeyType': 'RANGE'
        },
    ],
    BillingMode= 'PROVISIONED',
    ProvisionedThroughput={
        'ReadCapacityUnits': 5,
        'WriteCapacityUnits': 5
    },
	GlobalSecondaryIndexes= [{
		'IndexName': 'message-group-sk-index',
		'KeySchema': [{
			'AttributeName': 'message_group_uuid',
			'KeyType': 'HASH'
		},{
			'AttributeName': 'sk',
			'KeyType': 'RANGE'
		}],
		'Projection': {
			'ProjectionType': 'All'
		},
		'ProvisionedThroughput': {
			'ReadCapacityUnits': 5,
			'WriteCapacityUnits': 5
		},
	}]
)

# response = dynamodb.create_table(
# 	TableName=table_name,
# 	**table_schema
# )

print(response)